// Code generated from Denol.g4 by ANTLR 4.9. DO NOT EDIT.

package parser

import (
	"fmt"
	"unicode"

	"github.com/antlr/antlr4/runtime/Go/antlr"
)

// Suppress unused import error
var _ = fmt.Printf
var _ = unicode.IsLetter

var serializedLexerAtn = []uint16{
	3, 24715, 42794, 33075, 47597, 16764, 15335, 30598, 22884, 2, 33, 203,
	8, 1, 4, 2, 9, 2, 4, 3, 9, 3, 4, 4, 9, 4, 4, 5, 9, 5, 4, 6, 9, 6, 4, 7,
	9, 7, 4, 8, 9, 8, 4, 9, 9, 9, 4, 10, 9, 10, 4, 11, 9, 11, 4, 12, 9, 12,
	4, 13, 9, 13, 4, 14, 9, 14, 4, 15, 9, 15, 4, 16, 9, 16, 4, 17, 9, 17, 4,
	18, 9, 18, 4, 19, 9, 19, 4, 20, 9, 20, 4, 21, 9, 21, 4, 22, 9, 22, 4, 23,
	9, 23, 4, 24, 9, 24, 4, 25, 9, 25, 4, 26, 9, 26, 4, 27, 9, 27, 4, 28, 9,
	28, 4, 29, 9, 29, 4, 30, 9, 30, 4, 31, 9, 31, 4, 32, 9, 32, 3, 2, 3, 2,
	3, 3, 3, 3, 3, 4, 3, 4, 3, 5, 3, 5, 3, 5, 3, 6, 3, 6, 3, 7, 3, 7, 3, 7,
	3, 8, 3, 8, 3, 8, 3, 9, 3, 9, 3, 10, 3, 10, 3, 11, 3, 11, 3, 12, 3, 12,
	3, 12, 3, 13, 3, 13, 3, 13, 3, 14, 3, 14, 3, 15, 3, 15, 3, 16, 3, 16, 3,
	16, 3, 16, 3, 16, 3, 16, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17, 3, 17,
	3, 17, 3, 17, 3, 17, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3, 18, 3,
	19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 19, 3, 20,
	3, 20, 3, 20, 3, 20, 3, 21, 6, 21, 137, 10, 21, 13, 21, 14, 21, 138, 3,
	21, 6, 21, 142, 10, 21, 13, 21, 14, 21, 143, 3, 21, 3, 21, 6, 21, 148,
	10, 21, 13, 21, 14, 21, 149, 5, 21, 152, 10, 21, 3, 22, 3, 22, 3, 22, 3,
	23, 3, 23, 3, 24, 3, 24, 3, 24, 5, 24, 162, 10, 24, 3, 25, 6, 25, 165,
	10, 25, 13, 25, 14, 25, 166, 3, 26, 3, 26, 3, 27, 3, 27, 7, 27, 173, 10,
	27, 12, 27, 14, 27, 176, 11, 27, 3, 28, 3, 28, 3, 29, 3, 29, 7, 29, 182,
	10, 29, 12, 29, 14, 29, 185, 11, 29, 3, 29, 3, 29, 3, 29, 7, 29, 190, 10,
	29, 12, 29, 14, 29, 193, 11, 29, 3, 29, 5, 29, 196, 10, 29, 3, 30, 3, 30,
	3, 31, 3, 31, 3, 32, 3, 32, 2, 2, 33, 3, 3, 5, 4, 7, 5, 9, 6, 11, 7, 13,
	8, 15, 9, 17, 10, 19, 11, 21, 12, 23, 13, 25, 14, 27, 15, 29, 16, 31, 17,
	33, 18, 35, 19, 37, 20, 39, 21, 41, 22, 43, 23, 45, 24, 47, 25, 49, 26,
	51, 27, 53, 28, 55, 29, 57, 30, 59, 31, 61, 32, 63, 33, 3, 2, 9, 3, 2,
	50, 59, 4, 2, 12, 12, 15, 15, 6, 2, 11, 11, 15, 15, 34, 34, 112, 112, 5,
	2, 67, 92, 97, 97, 99, 124, 6, 2, 50, 59, 67, 92, 97, 97, 99, 124, 5, 2,
	12, 12, 15, 15, 36, 36, 5, 2, 12, 12, 15, 15, 41, 41, 2, 212, 2, 3, 3,
	2, 2, 2, 2, 5, 3, 2, 2, 2, 2, 7, 3, 2, 2, 2, 2, 9, 3, 2, 2, 2, 2, 11, 3,
	2, 2, 2, 2, 13, 3, 2, 2, 2, 2, 15, 3, 2, 2, 2, 2, 17, 3, 2, 2, 2, 2, 19,
	3, 2, 2, 2, 2, 21, 3, 2, 2, 2, 2, 23, 3, 2, 2, 2, 2, 25, 3, 2, 2, 2, 2,
	27, 3, 2, 2, 2, 2, 29, 3, 2, 2, 2, 2, 31, 3, 2, 2, 2, 2, 33, 3, 2, 2, 2,
	2, 35, 3, 2, 2, 2, 2, 37, 3, 2, 2, 2, 2, 39, 3, 2, 2, 2, 2, 41, 3, 2, 2,
	2, 2, 43, 3, 2, 2, 2, 2, 45, 3, 2, 2, 2, 2, 47, 3, 2, 2, 2, 2, 49, 3, 2,
	2, 2, 2, 51, 3, 2, 2, 2, 2, 53, 3, 2, 2, 2, 2, 55, 3, 2, 2, 2, 2, 57, 3,
	2, 2, 2, 2, 59, 3, 2, 2, 2, 2, 61, 3, 2, 2, 2, 2, 63, 3, 2, 2, 2, 3, 65,
	3, 2, 2, 2, 5, 67, 3, 2, 2, 2, 7, 69, 3, 2, 2, 2, 9, 71, 3, 2, 2, 2, 11,
	74, 3, 2, 2, 2, 13, 76, 3, 2, 2, 2, 15, 79, 3, 2, 2, 2, 17, 82, 3, 2, 2,
	2, 19, 84, 3, 2, 2, 2, 21, 86, 3, 2, 2, 2, 23, 88, 3, 2, 2, 2, 25, 91,
	3, 2, 2, 2, 27, 94, 3, 2, 2, 2, 29, 96, 3, 2, 2, 2, 31, 98, 3, 2, 2, 2,
	33, 104, 3, 2, 2, 2, 35, 114, 3, 2, 2, 2, 37, 121, 3, 2, 2, 2, 39, 131,
	3, 2, 2, 2, 41, 151, 3, 2, 2, 2, 43, 153, 3, 2, 2, 2, 45, 156, 3, 2, 2,
	2, 47, 161, 3, 2, 2, 2, 49, 164, 3, 2, 2, 2, 51, 168, 3, 2, 2, 2, 53, 170,
	3, 2, 2, 2, 55, 177, 3, 2, 2, 2, 57, 195, 3, 2, 2, 2, 59, 197, 3, 2, 2,
	2, 61, 199, 3, 2, 2, 2, 63, 201, 3, 2, 2, 2, 65, 66, 7, 43, 2, 2, 66, 4,
	3, 2, 2, 2, 67, 68, 7, 95, 2, 2, 68, 6, 3, 2, 2, 2, 69, 70, 7, 127, 2,
	2, 70, 8, 3, 2, 2, 2, 71, 72, 7, 63, 2, 2, 72, 73, 7, 63, 2, 2, 73, 10,
	3, 2, 2, 2, 74, 75, 7, 61, 2, 2, 75, 12, 3, 2, 2, 2, 76, 77, 7, 64, 2,
	2, 77, 78, 7, 63, 2, 2, 78, 14, 3, 2, 2, 2, 79, 80, 7, 62, 2, 2, 80, 81,
	7, 63, 2, 2, 81, 16, 3, 2, 2, 2, 82, 83, 7, 64, 2, 2, 83, 18, 3, 2, 2,
	2, 84, 85, 7, 62, 2, 2, 85, 20, 3, 2, 2, 2, 86, 87, 7, 63, 2, 2, 87, 22,
	3, 2, 2, 2, 88, 89, 7, 40, 2, 2, 89, 90, 7, 40, 2, 2, 90, 24, 3, 2, 2,
	2, 91, 92, 7, 126, 2, 2, 92, 93, 7, 126, 2, 2, 93, 26, 3, 2, 2, 2, 94,
	95, 7, 45, 2, 2, 95, 28, 3, 2, 2, 2, 96, 97, 7, 47, 2, 2, 97, 30, 3, 2,
	2, 2, 98, 99, 7, 117, 2, 2, 99, 100, 7, 99, 2, 2, 100, 101, 7, 110, 2,
	2, 101, 102, 7, 120, 2, 2, 102, 103, 7, 103, 2, 2, 103, 32, 3, 2, 2, 2,
	104, 105, 7, 112, 2, 2, 105, 106, 7, 99, 2, 2, 106, 107, 7, 113, 2, 2,
	107, 108, 7, 117, 2, 2, 108, 109, 7, 99, 2, 2, 109, 110, 7, 110, 2, 2,
	110, 111, 7, 120, 2, 2, 111, 112, 7, 113, 2, 2, 112, 113, 7, 119, 2, 2,
	113, 34, 3, 2, 2, 2, 114, 115, 7, 124, 2, 2, 115, 116, 7, 113, 2, 2, 116,
	117, 7, 103, 2, 2, 117, 118, 7, 107, 2, 2, 118, 119, 7, 116, 2, 2, 119,
	120, 7, 99, 2, 2, 120, 36, 3, 2, 2, 2, 121, 122, 7, 114, 2, 2, 122, 123,
	7, 99, 2, 2, 123, 124, 7, 111, 2, 2, 124, 125, 7, 113, 2, 2, 125, 126,
	7, 112, 2, 2, 126, 127, 7, 106, 2, 2, 127, 128, 7, 113, 2, 2, 128, 129,
	7, 117, 2, 2, 129, 130, 7, 99, 2, 2, 130, 38, 3, 2, 2, 2, 131, 132, 7,
	102, 2, 2, 132, 133, 7, 99, 2, 2, 133, 134, 7, 123, 2, 2, 134, 40, 3, 2,
	2, 2, 135, 137, 9, 2, 2, 2, 136, 135, 3, 2, 2, 2, 137, 138, 3, 2, 2, 2,
	138, 136, 3, 2, 2, 2, 138, 139, 3, 2, 2, 2, 139, 152, 3, 2, 2, 2, 140,
	142, 9, 2, 2, 2, 141, 140, 3, 2, 2, 2, 142, 143, 3, 2, 2, 2, 143, 141,
	3, 2, 2, 2, 143, 144, 3, 2, 2, 2, 144, 145, 3, 2, 2, 2, 145, 147, 7, 48,
	2, 2, 146, 148, 9, 2, 2, 2, 147, 146, 3, 2, 2, 2, 148, 149, 3, 2, 2, 2,
	149, 147, 3, 2, 2, 2, 149, 150, 3, 2, 2, 2, 150, 152, 3, 2, 2, 2, 151,
	136, 3, 2, 2, 2, 151, 141, 3, 2, 2, 2, 152, 42, 3, 2, 2, 2, 153, 154, 7,
	114, 2, 2, 154, 155, 7, 107, 2, 2, 155, 44, 3, 2, 2, 2, 156, 157, 7, 96,
	2, 2, 157, 46, 3, 2, 2, 2, 158, 162, 9, 3, 2, 2, 159, 160, 7, 15, 2, 2,
	160, 162, 7, 12, 2, 2, 161, 158, 3, 2, 2, 2, 161, 159, 3, 2, 2, 2, 162,
	48, 3, 2, 2, 2, 163, 165, 9, 4, 2, 2, 164, 163, 3, 2, 2, 2, 165, 166, 3,
	2, 2, 2, 166, 164, 3, 2, 2, 2, 166, 167, 3, 2, 2, 2, 167, 50, 3, 2, 2,
	2, 168, 169, 7, 60, 2, 2, 169, 52, 3, 2, 2, 2, 170, 174, 9, 5, 2, 2, 171,
	173, 9, 6, 2, 2, 172, 171, 3, 2, 2, 2, 173, 176, 3, 2, 2, 2, 174, 172,
	3, 2, 2, 2, 174, 175, 3, 2, 2, 2, 175, 54, 3, 2, 2, 2, 176, 174, 3, 2,
	2, 2, 177, 178, 7, 34, 2, 2, 178, 56, 3, 2, 2, 2, 179, 183, 7, 36, 2, 2,
	180, 182, 10, 7, 2, 2, 181, 180, 3, 2, 2, 2, 182, 185, 3, 2, 2, 2, 183,
	181, 3, 2, 2, 2, 183, 184, 3, 2, 2, 2, 184, 186, 3, 2, 2, 2, 185, 183,
	3, 2, 2, 2, 186, 196, 7, 36, 2, 2, 187, 191, 7, 41, 2, 2, 188, 190, 10,
	8, 2, 2, 189, 188, 3, 2, 2, 2, 190, 193, 3, 2, 2, 2, 191, 189, 3, 2, 2,
	2, 191, 192, 3, 2, 2, 2, 192, 194, 3, 2, 2, 2, 193, 191, 3, 2, 2, 2, 194,
	196, 7, 41, 2, 2, 195, 179, 3, 2, 2, 2, 195, 187, 3, 2, 2, 2, 196, 58,
	3, 2, 2, 2, 197, 198, 7, 42, 2, 2, 198, 60, 3, 2, 2, 2, 199, 200, 7, 93,
	2, 2, 200, 62, 3, 2, 2, 2, 201, 202, 7, 125, 2, 2, 202, 64, 3, 2, 2, 2,
	13, 2, 138, 143, 149, 151, 161, 166, 174, 183, 191, 195, 2,
}

var lexerChannelNames = []string{
	"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
}

var lexerModeNames = []string{
	"DEFAULT_MODE",
}

var lexerLiteralNames = []string{
	"", "')'", "']'", "'}'", "'=='", "';'", "'>='", "'<='", "'>'", "'<'", "'='",
	"'&&'", "'||'", "'+'", "'-'", "'salve'", "'naosalvou'", "'zoeira'", "'pamonhosa'",
	"'day'", "", "'pi'", "'^'", "", "", "':'", "", "' '", "", "'('", "'['",
	"'{'",
}

var lexerSymbolicNames = []string{
	"", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "",
	"", "", "NUMBER", "PI", "POW", "NL", "WS", "TWOPOINS", "ID", "SPACE", "STRING",
	"PAREN_START", "SQRT_START", "KEYS_START",
}

var lexerRuleNames = []string{
	"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8",
	"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16",
	"T__17", "T__18", "NUMBER", "PI", "POW", "NL", "WS", "TWOPOINS", "ID",
	"SPACE", "STRING", "PAREN_START", "SQRT_START", "KEYS_START",
}

type DenolLexer struct {
	*antlr.BaseLexer
	channelNames []string
	modeNames    []string
	// TODO: EOF string
}

// NewDenolLexer produces a new lexer instance for the optional input antlr.CharStream.
//
// The *DenolLexer instance produced may be reused by calling the SetInputStream method.
// The initial lexer configuration is expensive to construct, and the object is not thread-safe;
// however, if used within a Golang sync.Pool, the construction cost amortizes well and the
// objects can be used in a thread-safe manner.
func NewDenolLexer(input antlr.CharStream) *DenolLexer {
	l := new(DenolLexer)
	lexerDeserializer := antlr.NewATNDeserializer(nil)
	lexerAtn := lexerDeserializer.DeserializeFromUInt16(serializedLexerAtn)
	lexerDecisionToDFA := make([]*antlr.DFA, len(lexerAtn.DecisionToState))
	for index, ds := range lexerAtn.DecisionToState {
		lexerDecisionToDFA[index] = antlr.NewDFA(ds, index)
	}
	l.BaseLexer = antlr.NewBaseLexer(input)
	l.Interpreter = antlr.NewLexerATNSimulator(l, lexerAtn, lexerDecisionToDFA, antlr.NewPredictionContextCache())

	l.channelNames = lexerChannelNames
	l.modeNames = lexerModeNames
	l.RuleNames = lexerRuleNames
	l.LiteralNames = lexerLiteralNames
	l.SymbolicNames = lexerSymbolicNames
	l.GrammarFileName = "Denol.g4"
	// TODO: l.EOF = antlr.TokenEOF

	return l
}

// DenolLexer tokens.
const (
	DenolLexerT__0        = 1
	DenolLexerT__1        = 2
	DenolLexerT__2        = 3
	DenolLexerT__3        = 4
	DenolLexerT__4        = 5
	DenolLexerT__5        = 6
	DenolLexerT__6        = 7
	DenolLexerT__7        = 8
	DenolLexerT__8        = 9
	DenolLexerT__9        = 10
	DenolLexerT__10       = 11
	DenolLexerT__11       = 12
	DenolLexerT__12       = 13
	DenolLexerT__13       = 14
	DenolLexerT__14       = 15
	DenolLexerT__15       = 16
	DenolLexerT__16       = 17
	DenolLexerT__17       = 18
	DenolLexerT__18       = 19
	DenolLexerNUMBER      = 20
	DenolLexerPI          = 21
	DenolLexerPOW         = 22
	DenolLexerNL          = 23
	DenolLexerWS          = 24
	DenolLexerTWOPOINS    = 25
	DenolLexerID          = 26
	DenolLexerSPACE       = 27
	DenolLexerSTRING      = 28
	DenolLexerPAREN_START = 29
	DenolLexerSQRT_START  = 30
	DenolLexerKEYS_START  = 31
)
